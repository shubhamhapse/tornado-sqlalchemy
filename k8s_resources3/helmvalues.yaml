my-release-nginx-demo:
  replicaCount: 1
  image:
    repository: docker/vartest
    pullPolicy: IfNotPresent
    tag: var-1.1
  imagePullSecrets:
    - name: vartest
  nameOverride: my-release-nginx-demo
  fullnameOverride: ''
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0
    type: RollingUpdate
  deploymentLabels:
    app.kubernetes.io/name: my-release-nginx-demo
  podLabels: {}
  containerName: nginx-demo
  service:
    name: var-ms
    enabled: true
    type: ClusterIP
    port: 80
    portName: http
    targetPort: 80
    sessionAffinity: None
  ingress:
    enabled: true
    annotations: {}
    hosts:
      - host: var-ms.com
        paths:
          - /
    tls: []
  cm:
    create: true
    type: local
    files:
      - settings.yaml: |-
          # To be using with a docker

          API_PORT: 86
      - supervisord.conf: |-
          [supervisord]
          nodaemon=true
  volumes:
    enabled: true
    cm:
      enabled: true
      type: local
      mounts:
        file1:
          mountPath: /etc/supervisord.conf
          subPath: supervisord.conf
        file2:
          mountPath: /var/settings.yaml
          name: cve-conf
          subPath: settings.yaml
    secrets:
      enabled: true
      secretName: var-secret
      mountPath: /var/ets.yaml
      subPath: secrets.yaml
    extraVolumeMounts:
      enabled: false
  ports:
    enabled: true
    portname: http
    containerPort: 80
    protocol: TCP
  extraEnvs:
    - name: AWS_ROLE_SESSION_NAME
      value: var-ms-test
  resources:
    limits:
      cpu: '2'
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 500Mi
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
  nodeSelector:
    a: c
  tolerations: []
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: aws-az
                operator: In
                values:
                  - c
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                    - my-release-nginx-demo
            topologyKey: kubernetes.io/hostname
          weight: 1
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
nginx-server-nginx-repo:
  replicaCount: 1
  image:
    repository: docker/testing
    pullPolicy: IfNotPresent
    tag: nginx-server-nginx-repo-1.1
  imagePullSecrets:
    - name: vartest
  nameOverride: nginx-server-nginx-repo
  fullnameOverride: nginx-server-nginx-repo
  containerName: nginx-repo
  deploymentLabels:
    app.kubernetes.io/name: nginx-server-nginx-repo
  podLabels: {}
  service:
    enabled: false
  cm:
    create: true
    type: local
    files:
      - settings.yaml: |-
          # To be using with a docker

          API_PORT: 86
  volumes:
    enabled: true
    cm:
      enabled: true
      type: local
      mounts:
        file1:
          mountPath: /supervisord.conf
          subPath: supervisord.conf
        file2:
          mountPath: /l
          name: cve-conf
          subPath: settings.yaml
        file3:
          mountPath: /var/www/vartest/uwsgi.ini
          subPath: uwsgi.ini
    secrets:
      enabled: true
      secretName: var-secret
      mountPath: /var/www/vartest/var_micro_service/app/secrets.yaml
      subPath: secrets.yaml
    extraVolumeMounts:
      enabled: false
  ports:
    enabled: false
  extraEnvs:
    - name: AWS_ROLE_SESSION_NAME
      value: var-ms-test
  livenessProbeEnabled: false
  readinessProbeEnabled: false
  readinessProbe: false
  resources:
    limits:
      cpu: 250m
      memory: 1500Mi
    requests:
      cpu: 100m
      memory: 600Mi
  autoscaling:
    enabled: false
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
